{"version":3,"sources":["serviceWorker.js","components/Nav.js","components/Historico.js","components/ProdutoForm.js","components/Produto.js","components/ListaForm.js","components/Main.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Nav","react_default","a","createElement","react_router_dom","exact","to","activeClassName","Component","Historico","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","his","localStorage","getItem","JSON","parse","lista","data","_data","split","concat","_this2","className","Nav_Nav","map","item","key","indice","local","produtos","length","formatData","p","i","nome","resultado","ProdutoForm","props","quantidade","preco","e","nativeEvent","qnt","target","name","parseFloat","value","isNaN","prc","res","Math","round","setState","valor","onNovo","type","placeholder","onChange","setProduto","react_numeric_input_default","step","precision","calculaResultado","readOnly","onClick","Salvar","Produto","ListaForm","hoje","Date","toISOString","dados","onSalvar","onCancelar","v","setLocal","setData","Cancelar","Main","srcHistorico","isSalvarForm","isHistorico","nproduto","_produtos","push","toConsumableArray","sort","b","setItem","stringify","Limpar","itens","ProdutoForm_ProdutoForm","AdicionarNovo","SalvarAbrirDiag","Produto_Produto","ListaForm_ListaForm","SalvarCancelarDiag","App","es","atEnter","opacity","atLeave","atActive","react_router","path","component","React","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ac4a0c1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../css/Nav.css';\r\n\r\nexport default class Nav extends Component {\r\n    render(){\r\n        return (\r\n            <nav>\r\n                <NavLink exact to=\"/\" activeClassName=\"selected\">Home</NavLink>\r\n                <NavLink exact to=\"/historico\" activeClassName=\"selected\">Historico</NavLink>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Nav from './Nav';\r\nimport '../css/Historico.css';\r\n\r\nexport default class Historico extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        let his = localStorage.getItem('historico');\r\n        if( his )\r\n            his = JSON.parse(his);\r\n        else\r\n            his = [];\r\n        this.state = {lista:his};\r\n    }\r\n\r\n    formatData(data){\r\n        let _data = data.split('-');\r\n        return `${_data[2]}.${_data[1]}.${_data[0]}`;\r\n    }\r\n\r\n    render(){\r\n        const lista = this.state.lista;\r\n        return (\r\n            <section className='historico'>\r\n                <Nav />\r\n                <h2>\r\n                    Historico\r\n                </h2>\r\n                {\r\n                    lista.map( item => {\r\n                     return (<div className=\"hisItem\" key={item.indice}>\r\n                        <div className=\"header\">\r\n                            {item.local} - {item.produtos.length} produtos <span className=\"data\">{this.formatData(item.data)}</span>\r\n                        </div>\r\n                        <div className=\"body\">\r\n                            {\r\n                                item.produtos.map( (p, i) => {\r\n                                    return (\r\n                                    <div className=\"hisProduto\" key={i}>\r\n                                        <div className=\"header\">{p.nome}</div>\r\n                                        <div className=\"body\">{p.resultado}</div>\r\n                                    </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                     </div>);\r\n                    })\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NumericInput from 'react-numeric-input';\r\n\r\nexport default class ProdutoForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {quantidade: 0.0, preco: 0.0, resultado: 0.0, nome: ''};\r\n        this.props = props;\r\n    }\r\n\r\n    calculaResultado(e){\r\n\r\n        let valor = e.nativeEvent.data;\r\n        \r\n        let qnt = this.state.quantidade;\r\n        if( e.target.name === \"quantidade\"){\r\n            qnt = parseFloat(e.target.value);\r\n            if(isNaN(qnt)) return;\r\n            e.target.value = qnt;\r\n        }\r\n\r\n        let prc = this.state.preco;\r\n        if( e.target.name === \"preco\" ){\r\n            prc = parseFloat(e.target.value);\r\n            if(isNaN(prc)) return;\r\n            e.target.value = prc;\r\n        }\r\n\r\n        let res = 0.0;        \r\n        if(prc > 0.0){\r\n            res = Math.round(((qnt / prc) * 1000)) / 1000;\r\n        }\r\n\r\n        this.setState({\r\n            resultado: res,\r\n            quantidade: qnt,\r\n            preco: prc,\r\n        });\r\n    }\r\n\r\n    checkValue(e){\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    setProduto(valor){\r\n        this.setState({nome:valor});\r\n    }\r\n\r\n    Salvar(){\r\n        if( this.state.resultado === 0.0 ) return;\r\n        this.props.onNovo(this.state);\r\n        this.setState({quantidade: 0.0, preco: 0.0, resultado: 0.0, nome: ''});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"name-control\">\r\n                    <span>Nome do Produto</span>\r\n                    <input type=\"text\" name='nome' value={this.state.nome} placeholder=\"digite o nome do produto\" onChange={ e => this.setProduto(e.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"ProdutoForm\">\r\n                    <div className=\"form-control\">\r\n                        <span>Quantidade</span>\r\n                        \r\n                        <NumericInput step={0.01} precision={2} />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <span>Preço</span>\r\n                        <input type=\"number\" name='preco' value={this.state.preco} onChange={ e => this.calculaResultado(e)} />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <span>Preço / Produto</span>\r\n                        <input type=\"number\" value={this.state.resultado} readOnly />\r\n                    </div>\r\n                </div>\r\n                <div className=\"btn\">\r\n                    <button type=\"button\" onClick={() => this.Salvar()}>adicionar</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Produto extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.quantidade = 0;\r\n        this.preco = 0;\r\n        this.resultado = 0;\r\n        this.nome = 'Produto';\r\n        this.indice = 0;\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.quantidade = this.props.quantidade;\r\n        this.preco = this.props.preco;\r\n        this.resultado = this.props.resultado;\r\n        this.nome = this.props.nome;\r\n        this.indice = this.props.indice;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <section className=\"Produto\">\r\n                <div className=\"header\">\r\n                    {this.indice}. {this.nome}\r\n                </div>\r\n                <div className=\"body\">\r\n                    <span className=\"info\">{this.quantidade} / R$ {this.preco}</span>\r\n                    <span className=\"result\">{this.resultado}</span>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class ListaForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        let hoje = new Date();\r\n        hoje = hoje.toISOString().split('T')[0];\r\n        this.local = '';\r\n        this.data = hoje;\r\n        this.indice = 0;\r\n        this.state = { local: '', data: hoje, indice: 0 };\r\n    }\r\n\r\n    Salvar(dados){\r\n        this.props.onSalvar(this.state);\r\n    }\r\n\r\n    Cancelar(){\r\n        this.props.onCancelar();\r\n    }\r\n\r\n    setLocal(v){\r\n        this.setState({local:v});\r\n    }\r\n    \r\n    setData(v){\r\n        this.setState({data:v});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"ListaForm\">\r\n                <div className=\"wrapper\">\r\n                    <h2 className=\"mb2\">Salvar no histórico</h2>\r\n                    <div className=\"name-control mb2\">\r\n                        <span>Local</span>\r\n                        <input type=\"text\" name='local' value={this.state.local} placeholder=\"digite o local das compras\" onChange={ e => this.setLocal(e.target.value)} />\r\n                    </div>\r\n\r\n                    <div className=\"name-control mb2\">\r\n                        <span>data</span>\r\n                        <input type=\"date\" name='data' value={this.state.data} onChange={ e => this.setData(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <button type=\"button\" onClick={() => this.Salvar()}>Salvar & Limpar</button>\r\n                        <button type=\"button\" className=\"red\" onClick={() => this.Cancelar()}>Cancelar</button>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"bg\"></div> */}\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport ProdutoForm from './ProdutoForm';\r\nimport Produto from './Produto';\r\nimport ListaForm from './ListaForm';\r\nimport Nav from './Nav';\r\nimport '../css/Main.css';\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.srcHistorico = null;\r\n        this.state = {produtos : [], isSalvarForm:false, isHistorico:false};\r\n    }\r\n\r\n    AdicionarNovo(dados){\r\n        let nproduto = new Produto();\r\n        nproduto.quantidade = dados.quantidade;\r\n        nproduto.preco = dados.preco;\r\n        nproduto.resultado = dados.resultado;\r\n        nproduto.nome = dados.nome;\r\n        nproduto.indice = dados.indice | (this.state.produtos.length + 1);\r\n        let _produtos = this.state.produtos;\r\n        _produtos.push(nproduto);\r\n        _produtos = [..._produtos].sort((a,b) => a.resultado - b.resultado);\r\n        this.setState({produtos:_produtos});\r\n    }\r\n\r\n    Limpar(){\r\n        this.setState({produtos:[], isSalvarForm: false});\r\n    }\r\n\r\n    SalvarCancelarDiag(){\r\n        this.setState({isSalvarForm:false});\r\n    }\r\n\r\n    SalvarAbrirDiag(){\r\n        this.setState({isSalvarForm:true});\r\n    }\r\n\r\n    Salvar(dados){\r\n        if( this.state.produtos.length === 0 ) return;\r\n        let _produtos = [];\r\n        this.state.produtos.map(item => {\r\n            return _produtos.push({quantidade: item.quantidade, preco: item.preco, resultado: item.resultado, nome: item.nome, indice: item.indice});\r\n        });\r\n        let his = localStorage.getItem('historico');\r\n        if( !his ){\r\n            his = [];\r\n        }else{\r\n            his = JSON.parse(his);\r\n        }\r\n\r\n        his.push({\r\n            local: dados.local,\r\n            data: dados.data,\r\n            indice: (his.length + 1),\r\n            produtos: _produtos\r\n        });\r\n\r\n        localStorage.setItem('historico', JSON.stringify(his));\r\n        this.Limpar();\r\n\r\n    }\r\n\r\n    HistoricoAbrirDiag(){\r\n        if( this.srcHistorico )\r\n            this.srcHistorico.className = \"HistoricoScreen\";\r\n        this.setState({isHistorico:true});\r\n    }\r\n\r\n    HistoricoFecharDiag(){\r\n        this.srcHistorico.className = \"HistoricoScreenClosed\";\r\n        // this.setState({isHistorico:false});\r\n    }\r\n    \r\n    render(){\r\n        const itens = this.state.produtos;\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                <div className=\"MainScreen\">\r\n                    <ProdutoForm onNovo={e => this.AdicionarNovo(e)} />\r\n                    <h2>\r\n                        valores calculados\r\n                        <button className='optbtn green' onClick={() => this.SalvarAbrirDiag()}>salvar</button>\r\n                        <button className='optbtn red' onClick={() => this.Limpar()}>limpar</button>\r\n                    </h2>\r\n                    <div className=\"lista\">\r\n                        {\r\n                            itens.map((item, i) => {\r\n                                return (<Produto indice={i+1} nome={item.nome} quantidade={item.quantidade} preco={item.preco} resultado={item.resultado} key={item.indice} />);\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                { \r\n                    this.state.isSalvarForm &&\r\n                        <ListaForm\r\n                            onSalvar={dados => this.Salvar(dados)}\r\n                            onCancelar={() => this.SalvarCancelarDiag()} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport { AnimatedSwitch } from 'react-router-transition';\r\n\r\nimport Historico from './components/Historico';\r\nimport Main from './components/Main';\r\n\r\nclass App extends React.Component {\r\n    render(){\r\n        return(\r\n            <HashRouter>\r\n                <AnimatedSwitch\r\n                    atEnter={{ opacity: 0 }}\r\n                    atLeave={{ opacity: 0 }}\r\n                    atActive={{ opacity: 1 }}\r\n                    className=\"switch-wrapper\">\r\n\r\n                    <Route path={\"/historico\"} component={Historico} />\r\n                    <Route path={\"/\"} exact={true} component={Main} />\r\n                </AnimatedSwitch>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}